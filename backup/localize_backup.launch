<?xml version="1.0"?>
<launch>
    <!-- <args for urdf/> -->
    <arg name="camera_model"         default="OAK-D"   /> <!-- 'zed' or 'zedm' -->
    <arg name="camera_name"          default="oak"         />
    <arg name="mode"                 default="depth"       />
    <arg name="base_frame"           default="oak-d_frame" />
    <arg name="parent_frame"         default="oak-d-base-frame" />

    <arg name="cam_pos_x"             default="0.0"        /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_y"             default="0.0"        /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_z"             default="0.0"        /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0"     /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_pitch"             default="0.0"        /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_yaw"               default="0.0"     /> <!-- Orientation respect to base frame (i.e. "base_link) -->

    <arg name="lrcheck"               default="true"       /> 
    <arg name="extended"              default="false"      /> 
    <arg name="subpixel"              default="true"       />
    <arg name="rectify"               default="true"      />
    <arg name="depth_aligned"         default="false"      />
     <!-- see https://docs.luxonis.com/projects/api/en/latest/components/nodes/stereo_depth/#currently-configurable-blocks for possible combination of optionf for higher fps-->
    <arg name="stereo_fps"            default="15"         />
    <arg name="confidence"            default="200"        />
    <arg name="LRchecktresh"          default="5"          />

    <include file="$(find depthai_bridge)/launch/urdf.launch">
        <arg name="base_frame"      value="$(arg  base_frame)"  />
        <arg name="parent_frame"    value="$(arg  parent_frame)"/>
        <arg name="camera_model"    value="$(arg  camera_model)"/>
        <arg name="camera_name"     value="$(arg  camera_name)" />
        <arg name="cam_pos_x"       value="$(arg  cam_pos_x)"   />
        <arg name="cam_pos_y"       value="$(arg  cam_pos_y)"   />
        <arg name="cam_pos_z"       value="$(arg  cam_pos_z)"   />
        <arg name="cam_roll"        value="$(arg  cam_roll)"    />
        <arg name="cam_pitch"       value="$(arg  cam_pitch)"   />
        <arg name="cam_yaw"         value="$(arg  cam_yaw)"     />
    </include>

    <!-- launch-prefix="xterm -e gdb (add [- - args] without space) -->
    <node name="stereo_inertial_publisher" pkg="depthai_examples" type="stereo_inertial_node" output="screen" required="true">
        <param name="camera_name" value="$(arg camera_name)"/>
        <param name="mode" value="$(arg mode)"/>
        <param name="lrcheck" value="$(arg lrcheck)"/>
        <param name="extended" value="$(arg extended)"/>
        <param name="subpixel" value="$(arg subpixel)"/>
        <param name="rectify" value="$(arg rectify)" />
        <param name="depth_aligned" value="$(arg depth_aligned)" />
        <param name="stereo_fps" value="$(arg stereo_fps)" />
        <param name="confidence" value="$(arg confidence)" />
        <param name="LRchecktresh" value="$(arg LRchecktresh)" />
    </node>            


	<node pkg="tf" type="static_transform_publisher" name="base_to_map"
	    args="0 0 0 0 0 0 map base_link 100" />  
	
	<node pkg="tf" type="static_transform_publisher" name="base_to_stereo_camera_base_link"
	    args="0 0 0 0 0 0 base_link oak-d_frame 100" />  

	<node pkg="tf" type="static_transform_publisher" name="map_to_odom"
	    args="0 0 0 0 0 0 map odom 100" />  

	<!-- ODOMETRY NODE -->

    <node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" output="screen">
      	<remap from="left/image_rect"       to="/stereo_inertial_publisher/left/image_rect"/>
      	<remap from="right/image_rect"      to="/stereo_inertial_publisher/right/image_rect"/>
      	<remap from="left/camera_info"      to="/stereo_inertial_publisher/left/camera_info"/>
      	<remap from="right/camera_info"     to="/stereo_inertial_publisher/right/camera_info"/>
     	<remap from="odom"                  to="/odometry"/>

      	<param name="frame_id" type="string" value="oak-d_frame"/>
     	<param name="odom_frame_id" type="string" value="odom"/>

      	<param name="Vis/InlierDistance" type="string" value="0.1"/>
      	<param name="Vis/MinInliers" type="string" value="10"/>
      	<param name="Vis/RoiRatios" type="string" value="0.03 0.03 0.04 0.04"/>
      	<param name="Vis/MaxDepth" type="string" value="10"/>
      	<param name="approx_sync" type="bool" value="true"/>

     	<param name="Vis/MaxFeatures" type="string" value="500"/>
      	<param name="GFTT/MinDistance" type="string" value="5"/>
	</node>


	<node pkg="nodelet" type="nodelet" name="stereo_nodelet"  args="manager"/>

	<!-- Create point cloud for the planner -->
	<node pkg="nodelet" type="nodelet" name="depth2cloud" args="load rtabmap_ros/point_cloud_xyz stereo_nodelet">
		<remap from="depth/image"       to="stereo_inertial_publisher/stereo/depth"/>
		<remap from="depth/camera_info" to="stereo_inertial_publisher/stereo/camera_info"/>
		<remap from="cloud"                 to="cloudXYZ"/>
			
		<param name="voxel_size" type="double" value="0.05"/>
		<param name="decimation" type="int" value="4"/>
		<param name="max_depth" type="double" value="4"/>
	</node>

	<node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection stereo_nodelet">
		<remap from="cloud" to="cloudXYZ"/>
		<remap from="obstacles" to="/planner_cloud"/>

		<param name="frame_id" type="string" value="oak-d_frame"/>		
		<param name="map_frame_id" type="string" value="map"/>
		<param name="wait_for_transform" type="bool" value="true"/>
		<param name="min_cluster_size" type="int" value="20"/>
		<param name="max_obstacles_height" type="double" value="0.0"/>
	</node>

	
<!-- Move Base Node -->

	<group ns="planner">
	<remap from="openni_points" to="/planner_cloud"/>
	<remap from="base_scan" to="/base_scan"/>
    <remap from="map" to="/rtabmap/grid_map"/>
	<remap from="move_base_simple/goal" to="/planner_goal"/>
        
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
   		<rosparam file="$(find mapping)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    
		<rosparam file="$(find mapping)/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find mapping)/local_costmap_params.yaml" command="load"/>
   		<rosparam file="$(find mapping)/global_costmap_params.yaml" command="load"/>
    	<rosparam file="$(find mapping)/base_local_planner_params.yaml" command="load" />
   </node>
   		
   </group>


<!-- Backward compatibility launch file, use "rtabmap.launch rgbd:=false stereo:=true" instead -->

   <!-- Your camera should be calibrated and publishing rectified left and right 
        images + corresponding camera_info msgs. You can use stereo_image_proc for image rectification.
        Example:
           $ roslaunch rtabmap_ros bumblebee.launch -->
 
  <!-- Choose visualization -->
  <arg name="rtabmapviz"              default="false" /> 
  <arg name="rviz"                    default="true" />
  
  <!-- Localization-only mode -->
  <arg name="localization"            default="true"/>
  
  <!-- Corresponding config files -->
  <arg name="rtabmapviz_cfg"          default="$(find rtabmap_ros)/launch/config/rgbd_gui.ini" />
  <arg name="rviz_cfg"                default="$(find rtabmap_ros)/launch/config/rgbd.rviz" />
  
  <arg name="frame_id"                default="oak-d_frame"/>     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="database_path"           default="~/.ros/room.db"/>
  <arg name="rtabmap_args"            default="--Grid/3D flase"/> <!-- Grid/RayTracing true"/-->   <!-- delete_db_on_start, udebug -->
  <arg name="launch_prefix"           default=""/>
  <arg name="approx_sync"             default="true"/>         <!-- if timestamps of the input topics are not synchronized -->
  
  <arg name="stereo_namespace"        default="/stereo_inertial_publisher"/>
  <arg name="left_image_topic"        default="$(arg stereo_namespace)/left/image_rect" />
  <arg name="right_image_topic"       default="$(arg stereo_namespace)/right/image_rect" />      <!-- using grayscale image for efficiency -->
  <arg name="left_camera_info_topic"  default="$(arg stereo_namespace)/left/camera_info" />
  <arg name="right_camera_info_topic" default="$(arg stereo_namespace)/right/camera_info" />
  <arg name="compressed"              default="false"/>
   
  <arg name="subscribe_scan"          default="false"/>         <!-- Assuming 2D scan if set, rtabmap will do 3DoF mapping instead of 6DoF -->
  <arg name="scan_topic"              default="/scan"/>
   
  <arg name="subscribe_scan_cloud"    default="false"/>         <!-- Assuming 3D scan if set -->
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>
  
  <arg name="visual_odometry"         default="false"/>          <!-- Generate visual odometry -->
  <arg name="odom_topic"              default="/odometry"/>         <!-- Odometry topic used if visual_odometry is false -->
  <arg name="odom_frame_id"           default=""/>              <!-- If set, TF is used to get odometry instead of the topic -->
  
  <arg name="namespace"               default="rtabmap"/>
  <arg name="wait_for_transform"      default="0.2"/>
  
  <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
    <arg name="stereo"                  value="true"/>
    <arg name="rtabmapviz"              value="$(arg rtabmapviz)" /> 
    <arg name="rviz"                    value="$(arg rviz)" />
    <arg name="localization"            value="$(arg localization)"/>
    <arg name="gui_cfg"                 value="$(arg rtabmapviz_cfg)" />
    <arg name="rviz_cfg"                value="$(arg rviz_cfg)" />
  
    <arg name="frame_id"                value="$(arg frame_id)"/>
    <arg name="namespace"               value="$(arg namespace)"/>
    <arg name="database_path"           value="$(arg database_path)"/>
    <arg name="wait_for_transform"      value="$(arg wait_for_transform)"/>
    <arg name="rtabmap_args"            value="$(arg rtabmap_args)"/>  
    <arg name="launch_prefix"           value="$(arg launch_prefix)"/>          
    <arg name="approx_sync"             value="$(arg approx_sync)"/>

    <arg name="stereo_namespace"        value="$(arg stereo_namespace)"/>
    <arg name="left_image_topic"        value="$(arg left_image_topic)" />
    <arg name="right_image_topic"       value="$(arg right_image_topic)" />
    <arg name="left_camera_info_topic"  value="$(arg left_camera_info_topic)" />
    <arg name="right_camera_info_topic" value="$(arg right_camera_info_topic)" />
  
    <arg name="compressed"              value="$(arg compressed)"/>                                                                                
   
    <arg name="subscribe_scan"          value="$(arg subscribe_scan)"/>
    <arg name="scan_topic"              value="$(arg scan_topic)"/>
  
    <arg name="subscribe_scan_cloud"    value="$(arg subscribe_scan_cloud)"/>
    <arg name="scan_cloud_topic"        value="$(arg scan_cloud_topic)"/>
   
    <arg name="visual_odometry"         value="$(arg visual_odometry)"/>          
    <arg name="odom_topic"              value="$(arg odom_topic)"/>       
    <arg name="odom_frame_id"           value="$(arg odom_frame_id)"/>   
    <arg name="odom_args"               value="$(arg rtabmap_args)"/>
  </include>

</launch>

